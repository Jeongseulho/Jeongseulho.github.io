{"version":3,"file":"component---src-pages-diary-tsx-df3142cc650bee2922b0.js","mappings":"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","sources":["webpack://seulog/./src/components/Common/NoContent.tsx","webpack://seulog/./src/layout/BaseLayout.tsx","webpack://seulog/./src/components/Diary/DiaryCard.tsx","webpack://seulog/./src/pages/diary.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { theme } from 'theme/index';\r\nimport { Heading2, Subtitle } from 'styles/typography';\r\n\r\nconst FlexContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  padding-top: 40px;\r\n\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nconst Margin = styled.div`\r\n  margin-top: -20px;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nconst NoContent = () => {\r\n  return (\r\n    <FlexContainer>\r\n      <Margin>\r\n        <Heading2 textColor={theme.colors.bluegray[600]}>\r\n          피드가 '텅' 비었어요\r\n        </Heading2>\r\n      </Margin>\r\n      <Subtitle textColor={theme.colors.primary[200]}>\r\n        곧 새로운 소식이 올라올지도 몰라요!\r\n      </Subtitle>\r\n    </FlexContainer>\r\n  );\r\n};\r\n\r\nexport default NoContent;\r\n","import { Global, ThemeProvider } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\nimport React from 'react';\r\nimport { globalStyle } from 'styles';\r\nimport Footer from 'components/Navigation/Footer';\r\nimport Header from 'components/Navigation/Header';\r\nimport { theme } from 'theme/index';\r\nimport { mediaQuery } from 'theme/breakpoints';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Body = styled.main`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n\r\n  max-width: 1200px;\r\n  width: 100%;\r\n  min-height: calc(100vh - 80px); // minus footer height\r\n  height: 100%;\r\n  padding: 0px 40px;\r\n  padding-top: 72px; // padding to header height\r\n  margin: 0 auto;\r\n  background-color: ${({ theme }) => theme.lightTheme.backgroundColor};\r\n  transition: all 0.5s ease-in-out;\r\n\r\n  ${mediaQuery.sm} {\r\n    padding: 40px 0px;\r\n    padding-top: 72px;\r\n  }\r\n`;\r\n\r\ntype BaseLayoutProps = {\r\n  path: string;\r\n  children: React.ReactNode;\r\n  meta?: {\r\n    title: string;\r\n    description: string;\r\n    image?: string;\r\n    url: string;\r\n  };\r\n};\r\n\r\nconst INITIAL_META = {\r\n  title: 'seulog',\r\n  description: '슬호의 블로그',\r\n  image: '/static/profile-image.png',\r\n  url: 'https://jeongseulho.github.io/',\r\n};\r\n\r\nconst BaseLayout = ({ path, children, meta }: BaseLayoutProps) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Helmet>\r\n        <html lang=\"ko\" />\r\n        <title>{meta ? meta.title : INITIAL_META.title}</title>\r\n        <script\r\n          src=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-XXXX\"\r\n          crossOrigin=\"anonymous\"\r\n          async\r\n        />\r\n        <meta\r\n          name=\"google-site-verification\"\r\n          content=\"i1k9fAJNvByDpCtfnvLiC1aCfhuag46Ftm5CVnntwrI\"\r\n        />\r\n        <meta\r\n          name=\"description\"\r\n          content={meta ? meta.description : INITIAL_META.description}\r\n        />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <meta httpEquiv=\"Content-Type\" content=\"text/html;charset=UTF-8\" />\r\n\r\n        <meta property=\"og:type\" content=\"website\" />\r\n        <meta\r\n          property=\"og:title\"\r\n          content={meta ? meta.title : INITIAL_META.title}\r\n        />\r\n        <meta\r\n          property=\"og:description\"\r\n          content={meta ? meta.description : INITIAL_META.description}\r\n        />\r\n        <meta\r\n          property=\"og:image\"\r\n          content={meta?.image ? meta?.image : INITIAL_META.image}\r\n        />\r\n        <meta property=\"og:url\" content={meta ? meta.url : INITIAL_META.url} />\r\n        <meta\r\n          property=\"og:site_name\"\r\n          content={meta ? meta.title : INITIAL_META.title}\r\n        />\r\n      </Helmet>\r\n      <Global styles={globalStyle} />\r\n      <Header path={path} />\r\n      <Body>{children}</Body>\r\n      <Footer />\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default BaseLayout;\r\n","import React from 'react';\r\nimport { DiaryFrontMatterType } from '../../@types/Post.types';\r\nimport styled from '@emotion/styled';\r\nimport { Headline2, Summary, Title } from 'styles/typography';\r\nimport { theme } from 'theme/index';\r\nimport { Link } from 'gatsby';\r\n\r\ninterface DiaryCardProps {\r\n  slug: string;\r\n  content: DiaryFrontMatterType;\r\n}\r\n\r\nconst DiaryWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  padding: 24px 16px;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.light[100]};\r\n  & h1::after {\r\n    display: block;\r\n    content: '';\r\n    width: 0;\r\n    height: 2px;\r\n    margin-bottom: 3px;\r\n    margin-top: -5px;\r\n    background-color: ${props => props.theme.colors.primary[300]};\r\n    transition: width 0.3s;\r\n  }\r\n\r\n  :hover {\r\n    h1 {\r\n      color: ${({ theme }) => theme.colors.primary.default};\r\n    }\r\n    &:hover {\r\n      & h1::after {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Margin = styled.div`\r\n  margin-bottom: 8px;\r\n`;\r\n\r\nconst HeadlineWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  margin-right: 24px;\r\n`;\r\n\r\nconst DiaryCard = ({ slug, content }: DiaryCardProps) => {\r\n  return (\r\n    <Link to={slug}>\r\n      <DiaryWrapper>\r\n        <HeadlineWrapper>\r\n          <Headline2>\r\n            {content.index < 10 ? `0${content.index}.` : content.index}\r\n          </Headline2>\r\n        </HeadlineWrapper>\r\n        <div>\r\n          <Margin>\r\n            <Title style={{ fontWeight: 600 }}>{content.title}</Title>\r\n          </Margin>\r\n          <Summary textColor={theme.colors.dark[100]}>\r\n            {content.summary}\r\n          </Summary>\r\n        </div>\r\n      </DiaryWrapper>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default DiaryCard;\r\n","import React from 'react';\r\nimport BaseLayout from '../layout/BaseLayout';\r\nimport { PATH } from '../routes/path';\r\nimport { Guidance2, Summary } from '../styles/typography';\r\nimport styled from '@emotion/styled';\r\nimport { theme } from '../theme';\r\nimport { graphql } from 'gatsby';\r\nimport NoContent from '../components/Common/NoContent';\r\nimport DiaryCard from '../components/Diary/DiaryCard';\r\nimport { DiaryType } from '../@types/Post.types';\r\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\r\nimport { Headline } from '../styles/typography';\r\n\r\nconst DiaryWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 60px 0px;\r\n`;\r\n\r\nconst DiaryHead = styled.div`\r\n  width: 100%;\r\n  padding: 0px 16px;\r\n  padding-bottom: 40px;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.dark[50]};\r\n  margin-bottom: 40px;\r\n`;\r\nconst Margin = styled.div`\r\n  margin-top: 4px;\r\n`;\r\n\r\ntype DiaryPageProps = {\r\n  data: {\r\n    site: {\r\n      siteMetadata: {\r\n        title: string;\r\n        description: string;\r\n        siteUrl: string;\r\n      };\r\n    };\r\n    allMarkdownRemark: {\r\n      edges: DiaryType[];\r\n    };\r\n    file: {\r\n      childImageSharp: {\r\n        gatsbyImageData: IGatsbyImageData;\r\n      };\r\n      publicURL: string;\r\n    };\r\n  };\r\n};\r\n\r\nconst DiaryPage = ({\r\n  data: {\r\n    site: {\r\n      siteMetadata: { title, description, siteUrl },\r\n    },\r\n    allMarkdownRemark: { edges },\r\n    file: { publicURL },\r\n  },\r\n}: DiaryPageProps) => {\r\n  return (\r\n    <BaseLayout\r\n      path={PATH.diary}\r\n      meta={{\r\n        title,\r\n        description,\r\n        url: siteUrl,\r\n        image: publicURL,\r\n      }}\r\n    >\r\n      <DiaryWrapper>\r\n        <DiaryHead>\r\n          <Guidance2>Diary</Guidance2>\r\n          <Margin />\r\n          <Summary textColor={theme.colors.dark[100]}>\r\n            가끔씩 떠오르는 생각이나 회고를 적는 다이어리\r\n          </Summary>\r\n        </DiaryHead>\r\n        {edges.length > 0 ? (\r\n          edges.map(({ node: { fields, frontmatter } }, index) => (\r\n            <DiaryCard\r\n              key={`${index}_${frontmatter.title}`}\r\n              slug={fields.slug}\r\n              content={frontmatter}\r\n            />\r\n          ))\r\n        ) : (\r\n          <NoContent />\r\n        )}\r\n      </DiaryWrapper>\r\n    </BaseLayout>\r\n  );\r\n};\r\n\r\nexport default DiaryPage;\r\n\r\nexport const diaryContent = graphql`\r\n  query diaryContent {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        siteUrl\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: [{ frontmatter: { date: DESC } }, { frontmatter: { title: ASC } }]\r\n      filter: { frontmatter: { tags: { eq: null }, update: { eq: true } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            update\r\n            title\r\n            index\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n    file(name: { eq: \"profile-image\" }) {\r\n      childImageSharp {\r\n        gatsbyImageData(width: 120, height: 120)\r\n      }\r\n      publicURL\r\n    }\r\n  }\r\n`;\r\n"],"names":["FlexContainer","_styled","target","name","styles","Margin","NoContent","___EmotionJSX","Heading2","textColor","theme","Subtitle","Body","_ref","lightTheme","backgroundColor","mediaQuery","INITIAL_META","_ref2","path","children","meta","ThemeProvider","Helmet","lang","title","src","crossOrigin","async","content","description","httpEquiv","property","image","url","Global","globalStyle","Header","Footer","DiaryWrapper","colors","light","props","primary","default","HeadlineWrapper","_ref3","slug","Link","to","Headline2","index","Title","style","fontWeight","Summary","summary","DiaryHead","dark","data","site","siteMetadata","siteUrl","allMarkdownRemark","edges","file","publicURL","BaseLayout","PATH","Guidance2","length","map","node","fields","frontmatter","DiaryCard","key"],"sourceRoot":""}